import Head from "next/head";
import Menu from "components/Menu";
// import styled from "styled-components"
import { unstable_getServerSession } from "next-auth/next";
import { authOptions } from "./api/auth/[...nextauth]";
import { ChevronDownIcon, PencilSquareIcon, TrashIcon } from '@heroicons/react/24/outline'
import useSections from "hooks/useSections";
import { useState } from "react";
export default function Home() {
  const [isVisible, setIsVisible] = useState(false)
  const [isRotate, setIsRotate] = useState(false)
  return (
    <>
      <div className="min-h-screen inline-flex w-full justify-center bg-gray-200">
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/logo.svg" />
        </Head>
        <Menu />
        <main className="w-full mx-5">
          <div className="rounded-lg overflow-hidden mt-2">
            <div className="bg-orange-600 w-full h-10">
              <input type="text" className="rounded-lg flex-1 ml-14 mt-1 h-8 absolute"></input>
              <button className="w-6 h-6 bg-orange-600 ml-80 mt-2 rounded-lg">
                <PencilSquareIcon className="h-6 w-6 transition stroke-white hover:stroke-neutral-900" />
              </button>
              <button onClick={() => setIsVisible(isVisible => !isVisible)} className="w-6 h-6 bg-orange-600 ml-5 mt-2">
                <ChevronDownIcon onCLick={() => setIsRotate(isRotate => !isRotate)} className={`h-6 w-6 transition stroke-white hover:stroke-neutral-900 ${isRotate ? "rotate-0" : "rotate-180"}`} />
              </button>
            </div>
            <div className={`bg-gray-700 w-full h-80 ${isVisible ? "visible" : "invisible"}`}>
              <button className="h-10 w-80 bg-gray-700 text-white rounded-lg flex-1 ml-60 mt-10 outline outline-offset-2 outline-orange-600 text-lg font-bold font-mono hover:bg-gray-800">
                <p>Nuevo producto (っ◔◡◔)っ</p>
              </button>
              <div className="h-10 w-90 mt-10 ml-5 mr-5 bg-orange-400 rounded-lg">
                <input type="text" className="rounded-lg flex-1 ml-1 mt-1 h-8 w-80 absolute"></input>
                <button className="w-6 h-6 bg-orange-400 ml-80 mt-2 rounded-lg">
                  <TrashIcon className="h-6 w-6 transition stroke-white ml-80 hover:stroke-neutral-900" />
                </button>
                <button className="w-6 h-6 bg-orange-400 ml-70 mt-2 rounded-lg">
                  <PencilSquareIcon className="h-6 w-6 transition stroke-white ml-70 hover:stroke-neutral-900" />
                </button>
              </div>
            </div>
          </div>
        </main>
      </div>
    </>
  );
}

export const getServerSideProps = async (context) => {
  const session = await unstable_getServerSession(
    context.req,
    context.res,
    authOptions
  );

  if (!session) {
    return {
      redirect: {
        destination: "/login",
        permanent: false,
      },
    };
  }

  return {
    props: { session },
  };
};
